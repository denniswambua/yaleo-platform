version: "3.4"

services:
    api:
        ports:
            - "8000:8000"
        image: denniswambua/saleor:2.10.1
        restart: unless-stopped
        networks:
            - saleor-network
        depends_on:
            - db
            - redis
        volumes:
          # prevents overshadowing of build-time assets
          - /app/saleor/static/assets
          - /app/templates/templated_email/compiled
          # shared volume between worker and api for media
          - saleor-media:/app/media
        env_file: common.env
        environment:
          - "SECRET_KEY=${SECRET_KEY}"
          - "CELERY_BROKER_URL=${CELERY_BROKER_URL}"
          - "DATABASE_URL=${DATABASE_URL}"
          - "STOREFRONT_URL=${STOREFRONT_URL}"
          - "DASHBOARD_URL=${DASHBOARD_URL}"
          - "ALLOWED_CLIENT_HOSTS=${ALLOWED_CLIENT_HOSTS}"
          - "ALLOWED_HOSTS=${ALLOWED_HOSTS}"
          - "ENABLE_SSL=${ENABLE_SSL}"

    worker:
      image: denniswambua/saleor:2.10.1
      command: celery -A saleor worker --app=saleor.celeryconf:app --loglevel=info
      restart: unless-stopped
      networks:
        - saleor-network
      env_file: common.env
      environment:
        - "SECRET_KEY=${SECRET_KEY}"
        - "CELERY_BROKER_URL=${CELERY_BROKER_URL}"
        - "DATABASE_URL=${DATABASE_URL}"
        - "STOREFRONT_URL=${STOREFRONT_URL}"
        - "DASHBOARD_URL=${DASHBOARD_URL}"
        - "ALLOWED_CLIENT_HOSTS=${ALLOWED_CLIENT_HOSTS}"
        - "ALLOWED_HOSTS=${ALLOWED_HOSTS}"
        - "ENABLE_SSL=${ENABLE_SSL}"
      depends_on:
        - redis
      volumes:
        # prevents overshadowing of build-time assets
        - /app/templates/templated_email/compiled
        # shared volume between worker and api for media
        - saleor-media:/app/media

    nginx:
      image: "denniswambua/yaleo-frontend:${ENVIRONMENT}"
      restart: unless-stopped
      command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
      networks:
        - saleor-network
      ports:
        - "80:80"
        - "443:443"
      depends_on:
        - api
      volumes:
        - saleor-media:/app/media
        - ./data/certbot/conf:/etc/letsencrypt
        - ./data/certbot/www:/var/www/certbot
        - "./nginx/${NGINX_CONFIG}.conf:/etc/nginx/conf.d/default.conf"

    certbot:
      image: certbot/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
      volumes:
        - ./data/certbot/conf:/etc/letsencrypt
        - ./data/certbot/www:/var/www/certbot

    db:
        image: postgres:11.1-alpine
        restart: unless-stopped
        networks:
          - saleor-network
        volumes:
          - saleor-db:/var/lib/postgresql/data
        env_file:
          - db.env

    redis:
        image: library/redis:5.0-alpine
        restart: unless-stopped
        ports:
            - 6379:6379
        networks:
            - saleor-network
        volumes:
            - saleor-redis:/data
networks:
    saleor-network:
        driver: bridge

volumes:
  saleor-db:
    driver: local
  saleor-redis:
    driver: local
  saleor-media:
    driver: local